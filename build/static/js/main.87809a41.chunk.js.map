{"version":3,"sources":["services/logService.js","services/httpService.js","services/authService.js","components/common/tableHeader.jsx","components/common/tableBody.jsx","components/common/table.jsx","components/common/like.jsx","components/moviesTable.jsx","components/common/listGroup.jsx","components/common/pagination.jsx","services/movieService.js","services/genreService.js","utils/paginate.js","components/searchBox.jsx","components/movies.jsx","components/common/input.jsx","components/common/select.jsx","components/common/form.jsx","components/movieForm.jsx","components/customers.jsx","components/rentals.jsx","components/notFound.jsx","components/navBar.jsx","components/loginForm.jsx","services/userService.js","components/registerForm.jsx","components/logout.jsx","components/common/protectedRoute.jsx","App.js","serviceWorker.js","index.js"],"names":["init","log","error","console","axios","interceptors","response","use","status","logger","toast","Promise","reject","get","post","put","delete","setJwt","jwt","usr","JSON","parse","localStorage","getItem","token","jwtToken","defaults","headers","authorization","apiEndpoint","apiUrl","username","password","a","http","data","setItem","stringify","getJwt","tkn","login","loginWithJwt","logout","removeItem","getCurrentUser","firstName","lastName","isAdmin","ex","TableHeader","raiseSort","path","sortColumn","props","order","onSort","renderSortIcon","column","className","this","columns","map","key","onClick","label","Component","TableBody","renderCell","item","content","_","createKey","_id","Table","Like","classes","liked","replace","style","cursor","aria-hidden","MoviesTable","movie","to","title","onLike","asknproceed","confirmAlert","message","buttons","onDelete","deleteColumn","user","auth","push","movies","ListGroup","items","textProperty","valueProperty","selectedItem","onItemSelect","defaultProps","Pagination","itemsCount","pageSize","currentPage","onPageChange","pagesCount","Math","ceil","pages","range","page","getMovie","movieId","saveMovie","body","deleteMovie","getGenres","paginate","pageNumber","startIndex","slice","take","value","SearchBox","onChange","type","name","placeholder","e","currentTarget","Movies","state","genres","searchQuery","selectedGenre","handleDelete","originalMovies","filter","m","setState","success","handleLike","index","indexOf","handlePageChange","handleGenreSelect","genre","handleSearch","query","handleSort","getPagedData","allMovies","filtered","toLowerCase","startsWith","orderBy","totalCount","length","count","marginBottom","Input","rest","htmlFor","id","Select","options","option","Form","errors","validate","Joi","schema","abortEarly","details","validateProperty","obj","handleSubmit","preventDefault","doSubmit","handleChange","input","errorMessage","MovieForm","genreId","numberInStock","dailyRentalRate","number","string","required","min","max","history","match","params","mapToViewModel","populateGenres","populateMovie","onSubmit","renderInput","renderSelect","renderButton","Customers","Rentals","NotFound","NavBar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","Fragment","LoginForm","location","window","from","pathname","register","RegisterForm","email","userService","Logout","ProtectedRoute","component","render","App","useState","useEffect","exact","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"2bAMe,OACbA,KAPF,aAQEC,IANF,SAAaC,GACXC,QAAQD,MAAMA,KCChBE,IAAMC,aAAaC,SAASC,IAAI,MAAM,SAAAL,GAWpC,OATEA,EAAMI,UACNJ,EAAMI,SAASE,QAAU,KACzBN,EAAMI,SAASE,OAAS,MAGxBC,EAAOR,IAAIC,GACXQ,IAAMR,MAAM,mCAGPS,QAAQC,OAAOV,MAeT,OACbW,IAAKT,IAAMS,IACXC,KAAMV,IAAMU,KACZC,IAAKX,IAAMW,IACXC,OAAQZ,IAAMY,OACdC,OAjBF,SAAgBC,GACZ,IAAMC,EAAMC,KAAKC,MAAMC,aAAaC,QAAQ,UACxCC,EAAQ,KAKRA,EAJCN,IACOC,EAAMA,EAAIM,SAAW,MAKjCrB,IAAMsB,SAASC,QAAQC,cAAgB,UAAYJ,I,QCxBjDK,EAAcC,IAAS,sB,4CAKtB,WAAqBC,EAAUC,GAA/B,iBAAAC,EAAA,sEACuBC,EAAKpB,KAAKe,EAAa,CAAEE,WAAUC,aAD1D,gBACSd,EADT,EACGiB,KAERb,aAAac,QAPE,QAOgBhB,KAAKiB,UAAUnB,IAHzC,4C,sBAwBA,SAASoB,IACd,IAAIC,EAAMjB,aAAaC,QA7BR,SA+Bf,GADApB,QAAQF,IAAI,gBAAiBsC,GACzBA,EAAK,CACP,IAAMpB,EAAMC,KAAKC,MAAMkB,GACvB,OAAOpB,EAAMA,EAAIM,SAAW,MA/BhCS,EAAKjB,OAAOqB,KAmCG,OACbE,MAlCK,SAAP,qCAmCEC,aA7BK,SAAsBvB,GAC3BI,aAAac,QAXE,QAWgBlB,IA6B/BwB,OA1BK,WACLpB,aAAaqB,WAfE,UAyCfC,eAvBK,WACL,IACE,IAAM1B,EAAMI,aAAaC,QApBZ,SAqBPJ,EAAMC,KAAKC,MAAMH,GACvB,MAAO,CAAE,KAAQC,EAAI0B,UAAY,IAAM1B,EAAI2B,SAAU,QAAW3B,EAAI4B,SACpE,MAAOC,GACP,OAAO,OAkBTV,UCDaW,E,4MAtCbC,UAAY,SAAAC,GACV,IAAMC,EAAU,eAAQ,EAAKC,MAAMD,YAC/BA,EAAWD,OAASA,EACtBC,EAAWE,MAA6B,QAArBF,EAAWE,MAAkB,OAAS,OAEzDF,EAAWD,KAAOA,EAClBC,EAAWE,MAAQ,OAErB,EAAKD,MAAME,OAAOH,I,EAGpBI,eAAiB,SAAAC,GAAW,IAClBL,EAAe,EAAKC,MAApBD,WAER,OAAIK,EAAON,OAASC,EAAWD,KAAa,KACnB,QAArBC,EAAWE,MAAwB,uBAAGI,UAAU,mBAC7C,uBAAGA,UAAU,qB,uDAGZ,IAAD,OACP,OACE,+BACE,4BACGC,KAAKN,MAAMO,QAAQC,KAAI,SAAAJ,GAAM,OAC5B,wBACMC,UAAU,mBACdI,IAAKL,EAAON,MAAQM,EAAOK,IAC3BC,QAAS,kBAAM,EAAKb,UAAUO,EAAON,QAEpCM,EAAOO,MALV,IAKkB,EAAKR,eAAeC,a,GA9BxBQ,a,iBC2BXC,E,4MA7BbC,WAAa,SAACC,EAAMX,GAClB,OAAIA,EAAOY,QAAgBZ,EAAOY,QAAQD,GAEnCE,IAAEzD,IAAIuD,EAAMX,EAAON,O,EAG5BoB,UAAY,SAACH,EAAMX,GACjB,OAAOW,EAAKI,KAAOf,EAAON,MAAQM,EAAOK,M,uDAGjC,IAAD,SACmBH,KAAKN,MAAvBlB,EADD,EACCA,KAAMyB,EADP,EACOA,QAEd,OACE,+BACGzB,EAAK0B,KAAI,SAAAO,GAAI,OACZ,wBAAIN,IAAKM,EAAKI,KACXZ,EAAQC,KAAI,SAAAJ,GAAM,OACjB,wBAAIK,IAAK,EAAKS,UAAUH,EAAMX,IAC3B,EAAKU,WAAWC,EAAMX,gB,GApBfQ,aCUTQ,EATD,SAAC,GAA2C,IAAzCb,EAAwC,EAAxCA,QAASR,EAA+B,EAA/BA,WAAYG,EAAmB,EAAnBA,OAAQpB,EAAW,EAAXA,KAC5C,OACE,2BAAOuB,UAAU,SACf,kBAAC,EAAD,CAAaE,QAASA,EAASR,WAAYA,EAAYG,OAAQA,IAC/D,kBAAC,EAAD,CAAWK,QAASA,EAASzB,KAAMA,MCO1BuC,EAbF,SAAArB,GACT,IAAIsB,EAAU,mBAEhB,OADOtB,EAAMuB,QAAOD,EAAUA,EAAQE,QAAQ,QAAQ,OAEpD,uBACEd,QAASV,EAAMU,QACfe,MAAO,CAAEC,OAAQ,WACjBrB,UAAWiB,EACXK,cAAY,U,QCkEHC,G,wDApBb,aAAe,IAAD,uBACZ,gBAhDFrB,QAAU,CACR,CACET,KAAM,QACNa,MAAO,QACPK,QAAS,SAAAa,GAAK,OAAI,kBAAC,IAAD,CAAMC,GAAE,kBAAaD,EAAMV,MAAQU,EAAME,SAE3D,CAAEjC,KAAM,aAAca,MAAO,SAC/B,CAAEb,KAAM,gBAAiBa,MAAO,SAChC,CAAEb,KAAM,kBAAmBa,MAAO,QAClC,CACEF,IAAK,OACLO,QAAS,SAAAa,GAAK,OACZ,kBAAC,EAAD,CAAMN,MAAOM,EAAMN,MAAOb,QAAS,kBAAM,EAAKV,MAAMgC,OAAOH,SAmCnD,EA9BZI,YAAc,SAACJ,GAEXK,uBAAa,CACTH,MAAO,iBACPI,QAAS,yCAA2CN,EAAME,MAC1DK,QAAS,CACL,CACIzB,MAAO,MACPD,QAAS,kBAAM,EAAKV,MAAMqC,SAASR,KAEvC,CACIlB,MAAO,KACPD,QAAS,kBAkBb,EAZd4B,aAAe,CACb7B,IAAK,SACLO,QAAS,SAAAa,GAAK,OACV,4BACInB,QAAS,kBAAM,EAAKuB,YAAYJ,IACpCxB,UAAU,yBAFV,YAWJ,IAAMkC,EAAOC,EAAKjD,iBAFN,OAGRgD,GAAQA,EAAK7C,SAAS,EAAKa,QAAQkC,KAAK,EAAKH,cAHrC,E,qDAMJ,IAAD,EACgChC,KAAKN,MAApC0C,EADD,EACCA,OAAQxC,EADT,EACSA,OAAQH,EADjB,EACiBA,WAExB,OACE,kBAAC,EAAD,CACEQ,QAASD,KAAKC,QACdzB,KAAM4D,EACN3C,WAAYA,EACZG,OAAQA,Q,GA9DUU,cCNpB+B,EAAY,SAAC,GAMZ,IALLC,EAKI,EALJA,MACAC,EAII,EAJJA,aACAC,EAGI,EAHJA,cACAC,EAEI,EAFJA,aACAC,EACI,EADJA,aAEE,OAEA,wBAAI3C,UAAU,cACDuC,EAAMpC,KAAI,SAAAO,GAAI,OAEX,wBACIL,QAAS,kBAAMsC,EAAajC,IAC5BN,IAAKM,EAAK+B,GACVzC,UACIU,EAAK+B,KAAmBC,EAAaD,GAAiB,gCAAkC,0BAG3F/B,EAAK8B,SAQ9BF,EAAUM,aAAe,CACvBJ,aAAc,OACdC,cAAe,OAGFH,QCAAO,EA9BI,SAAC,GAAyD,IAAvDC,EAAsD,EAAtDA,WAAYC,EAA0C,EAA1CA,SAAUC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACjDC,EAAaC,KAAKC,KAAKN,EAAaC,GAC1C,GAAmB,IAAfG,EAAkB,OAAO,KAC7B,IAAMG,EAAQzC,IAAE0C,MAAM,EAAGJ,EAAa,GAEtC,OACE,6BACE,wBAAIlD,UAAU,cACXqD,EAAMlD,KAAI,SAAAoD,GAAI,OACb,wBACEnD,IAAKmD,EACDvD,UAAWuD,IAASP,EAAc,mBAAqB,oBAE3D,uBAAGhD,UAAU,YAAYK,QAAS,kBAAM4C,EAAaM,KAClDA,UCfTpF,EAAcC,IAAS,WAWtB,SAASoF,EAASC,GACrB,OAAOjF,EAAKrB,IAAIgB,EAAc,aAAasF,GAGxC,SAASC,EAAUlC,GACtB,GAAIA,EAAMV,IAAK,CAEf,IAAM6C,EAAI,eAAQnC,GAEhB,OAAOhD,EAAKnB,IAAIc,EAAc,cAAewF,GAG/C,OAAOnF,EAAKpB,KAAKe,EAAc,WAAYqD,GAGxC,SAASoC,EAAYH,GACxB,OAAOjF,EAAKlB,OAAOa,EAAc,eAAiBsF,GC3B/C,SAASI,IACZ,OAAOrF,EAAKrB,IAAIiB,IAAS,sBCFtB,SAAS0F,EAASvB,EAAOwB,EAAYhB,GAC1C,IAAMiB,GAAcD,EAAa,GAAKhB,EACtC,OAAOnC,IAAE2B,GACN0B,MAAMD,GACNE,KAAKnB,GACLoB,QFHL3F,EAAKjB,OAAO,IGFZ,IAae6G,EAbG,SAAC,GAAyB,IAAvBD,EAAsB,EAAtBA,MAAOE,EAAe,EAAfA,SAC1B,OACE,2BACEC,KAAK,OACLC,KAAK,QACLvE,UAAU,oBACVwE,YAAY,YACZL,MAAOA,EACPE,SAAU,SAAAI,GAAC,OAAIJ,EAASI,EAAEC,cAAcP,WC2I/BQ,E,4MAxIbC,MAAQ,CACNvC,OAAQ,GACRwC,OAAQ,GACR7B,YAAa,EACbD,SAAU,EACV+B,YAAa,GACbC,cAAe,GACfrF,WAAY,CAAED,KAAM,QAASG,MAAO,Q,EAatCoF,a,uCAAe,WAAMxD,GAAN,iBAAAjD,EAAA,6DACP0G,EAAiB,EAAKL,MAAMvC,OAC5BA,EAAS4C,EAAeC,QAAO,SAAAC,GAAC,OAAIA,EAAErE,MAAQU,EAAMV,OAC1D,EAAKsE,SAAS,CAAE/C,WAHH,kBAMHuB,EAAYpC,EAAMV,KANf,OAOT9D,IAAMqI,QAAQ,aAAe7D,EAAME,MAAQ,gBAPlC,gDASP,KAAG9E,UAAmC,MAAvB,KAAGA,SAASE,OAC3BE,IAAMR,MAAM,wCAEZQ,IAAMR,MAAM,mCAEhB,EAAK4I,SAAS,CAAE/C,OAAQ4C,IAdb,yD,wDAkBfK,WAAa,SAAA9D,GACX,IAAMa,EAAM,YAAO,EAAKuC,MAAMvC,QACxBkD,EAAQlD,EAAOmD,QAAQhE,GAC7Ba,EAAOkD,GAAP,eAAqBlD,EAAOkD,IAC5BlD,EAAOkD,GAAOrE,OAASmB,EAAOkD,GAAOrE,MACrC,EAAKkE,SAAS,CAAE/C,Y,EAGlBoD,iBAAmB,SAAAlC,GACjB,EAAK6B,SAAS,CAAEpC,YAAaO,K,EAG/BmC,kBAAoB,SAAAC,GAClB,EAAKP,SAAS,CAAEL,cAAeY,EAAOb,YAAa,GAAI9B,YAAa,K,EAGtE4C,aAAe,SAAAC,GACb,EAAKT,SAAS,CAAEN,YAAae,EAAOd,cAAe,KAAM/B,YAAa,K,EAGxE8C,WAAa,SAAApG,GACX,EAAK0F,SAAS,CAAE1F,gB,EAGlBqG,aAAe,WAAO,IAAD,EAQf,EAAKnB,MANP7B,EAFiB,EAEjBA,SACAC,EAHiB,EAGjBA,YACAtD,EAJiB,EAIjBA,WACAqF,EALiB,EAKjBA,cACAD,EANiB,EAMjBA,YACQkB,EAPS,EAOjB3D,OAGE4D,EAAWD,EACXlB,EACFmB,EAAWD,EAAUd,QAAO,SAAAC,GAAC,OAC3BA,EAAEzD,MAAMwE,cAAcC,WAAWrB,EAAYoB,kBAExCnB,GAAiBA,EAAcjE,MACtCmF,EAAWD,EAAUd,QAAO,SAAAC,GAAC,OAAIA,EAAEQ,MAAM7E,MAAQiE,EAAcjE,QAEjE,IAEMuB,EAASyB,EAFAlD,IAAEwF,QAAQH,EAAU,CAACvG,EAAWD,MAAO,CAACC,EAAWE,QAElCoD,EAAaD,GAE7C,MAAO,CAAEsD,WAAYJ,EAASK,OAAQ7H,KAAM4D,I,4MAzErBwB,I,uBAAfpF,E,EAAAA,KACFoG,E,CAAU,CAAE/D,IAAK,GAAIyD,KAAM,e,mBAAmB9F,IAC5CsG,EAAgB,CAAEjE,IAAK,GAAIyD,KAAM,c,SJfpC/F,EAAKrB,IAAIgB,EAAY,U,gBIgBVkE,E,EAAN5D,KAERwB,KAAKmF,SAAS,CAAE/C,SAAQwC,SAAQE,kB,sIAuE1B,IACQwB,EAAUtG,KAAK2E,MAAMvC,OAA7BiE,OADD,EAEoDrG,KAAK2E,MAAxD7B,EAFD,EAECA,SAAUC,EAFX,EAEWA,YAAatD,EAFxB,EAEwBA,WAAYoF,EAFpC,EAEoCA,YACnC5C,EAASjC,KAAKN,MAAduC,KAER,GAAc,IAAVqE,EAAa,OAAO,mEALjB,MAO8BtG,KAAK8F,eAAlCM,EAPD,EAOCA,WAAkBhE,EAPnB,EAOa5D,KAEpB,OACE,yBAAKuB,UAAU,OACb,yBAAKA,UAAU,SACP,kBAAC,EAAD,CACIuC,MAAOtC,KAAK2E,MAAMC,OAC1BnC,aAAczC,KAAK2E,MAAMG,cACzBpC,aAAc1C,KAAKyF,qBAGvB,yBAAK1F,UAAU,OACZkC,GACC,kBAAC,IAAD,CACET,GAAG,cACHzB,UAAU,kBACVoB,MAAO,CAAEoF,aAAc,KAHzB,aAQF,sCAAYH,EAAZ,4BACA,kBAAC,EAAD,CAAWlC,MAAOW,EAAaT,SAAUpE,KAAK2F,eAC9C,kBAAC,EAAD,CACEvD,OAAQA,EACR3C,WAAYA,EACZiC,OAAQ1B,KAAKqF,WACLtD,SAAW/B,KAAK+E,aACxBnF,OAAQI,KAAK6F,aAEf,kBAAC,EAAD,CACEhD,WAAYuD,EACZtD,SAAUA,EACVC,YAAaA,EACbC,aAAchD,KAAKwF,yB,GAjIVlF,a,wCCANkG,EAVD,SAAC,GAAqC,IAAnClC,EAAkC,EAAlCA,KAAMjE,EAA4B,EAA5BA,MAAO9D,EAAqB,EAArBA,MAAUkK,EAAW,wCACjD,OACE,yBAAK1G,UAAU,cACb,2BAAO2G,QAASpC,GAAOjE,GACvB,2CAAWoG,EAAX,CAAiBnC,KAAMA,EAAMqC,GAAIrC,EAAMvE,UAAU,kBAChDxD,GAAS,yBAAKwD,UAAU,sBAAsBxD,KCYtCqK,GAjBA,SAAC,GAA8C,IAA5CtC,EAA2C,EAA3CA,KAAMjE,EAAqC,EAArCA,MAAOwG,EAA8B,EAA9BA,QAAStK,EAAqB,EAArBA,MAAUkK,EAAW,kDAC3D,OACE,yBAAK1G,UAAU,cACb,2BAAO2G,QAASpC,GAAOjE,GACvB,0CAAQiE,KAAMA,EAAMqC,GAAIrC,GAAUmC,EAAlC,CAAwC1G,UAAU,iBAChD,4BAAQmE,MAAM,KACb2C,EAAQ3G,KAAI,SAAA4G,GAAM,OACjB,4BAAQ3G,IAAK2G,EAAOjG,IAAKqD,MAAO4C,EAAOjG,KACpCiG,EAAOxC,UAIb/H,GAAS,yBAAKwD,UAAU,sBAAsBxD,KC2EtCwK,G,4MAnFbpC,MAAQ,CACNnG,KAAM,GACNwI,OAAQ,I,EAGVC,SAAW,WACT,IACQ1K,EAAU2K,IAAID,SAAS,EAAKtC,MAAMnG,KAAM,EAAK2I,OADrC,CAAEC,YAAY,IACtB7K,MACR,IAAKA,EAAO,OAAO,KAEnB,IALe,EAKTyK,EAAS,GALA,cAMEzK,EAAM8K,SANR,IAMf,gCAAS5G,EAAT,QAAgCuG,EAAOvG,EAAKjB,KAAK,IAAMiB,EAAKoB,SAN7C,8BAOf,OAAOmF,G,EAGTM,iBAAmB,YAAsB,IAAnBhD,EAAkB,EAAlBA,KAAMJ,EAAY,EAAZA,MACpBqD,EAAG,eAAMjD,EAAOJ,GAChBiD,EAAM,eAAM7C,EAAO,EAAK6C,OAAO7C,IAC7B/H,EAAU2K,IAAID,SAASM,EAAKJ,GAA5B5K,MACR,OAAOA,EAAQA,EAAM8K,QAAQ,GAAGxF,QAAU,M,EAG5C2F,aAAe,SAAAhD,GACXA,EAAEiD,iBAEJ,IAAMT,EAAS,EAAKC,WACpB,EAAK9B,SAAS,CAAE6B,OAAQA,GAAU,KAC9BA,GAEJ,EAAKU,Y,EAGPC,aAAe,YAA+B,IAAbC,EAAY,EAA3BnD,cACVuC,EAAM,eAAQ,EAAKrC,MAAMqC,QACzBa,EAAe,EAAKP,iBAAiBM,GACvCC,EAAcb,EAAOY,EAAMtD,MAAQuD,SAC3Bb,EAAOY,EAAMtD,MAEzB,IAAM9F,EAAI,eAAQ,EAAKmG,MAAMnG,MAC7BA,EAAKoJ,EAAMtD,MAAQsD,EAAM1D,MAEzB,EAAKiB,SAAS,CAAE3G,OAAMwI,Y,2DAGX3G,GACX,OACE,4BAAQN,UAAU,mBACfM,K,mCAKMiE,EAAMjE,EAAOwG,GAAU,IAAD,EACR7G,KAAK2E,MAAtBnG,EADyB,EACzBA,KAAMwI,EADmB,EACnBA,OAEd,OACE,kBAAC,GAAD,CACE1C,KAAMA,EACNJ,MAAO1F,EAAK8F,GACZjE,MAAOA,EACPwG,QAASA,EACTzC,SAAUpE,KAAK2H,aACfpL,MAAOyK,EAAO1C,O,kCAKRA,EAAMjE,GAAuB,IAAhBgE,EAAe,uDAAR,OAAQ,EACbrE,KAAK2E,MAAtBnG,EAD8B,EAC9BA,KAAMwI,EADwB,EACxBA,OAEd,OACE,kBAAC,EAAD,CACE3C,KAAMA,EACNC,KAAMA,EACNJ,MAAO1F,EAAK8F,GACZjE,MAAOA,EACP+D,SAAUpE,KAAK2H,aACfpL,MAAOyK,EAAO1C,S,GA9EHhE,aCiGJwH,G,4MA9FbnD,MAAQ,CACJnG,KAAM,CACNqC,IAAI,EACJY,MAAO,GACPsG,QAAS,GACTC,cAAe,GACfC,gBAAiB,IAEnBrD,OAAQ,GACRoC,OAAQ,I,EAGVG,OAAS,CACPtG,IAAKqG,IAAIgB,SACTzG,MAAOyF,IAAIiB,SACRC,WACA/H,MAAM,SACT0H,QAASb,IAAIgB,SACVE,WACA/H,MAAM,SACT2H,cAAed,IAAIgB,SAChBE,WACAC,IAAI,GACJC,IAAI,KACJjI,MAAM,mBACT4H,gBAAiBf,IAAIgB,SAClBE,WACAC,IAAI,GACJC,IAAI,IACJjI,MAAM,sB,EAoCTqH,S,sBAAW,sBAAApJ,EAAA,6DAEP,EAAKqG,MAAMnG,KAAKwJ,cAAgB9E,KAAKC,KAAK,EAAKwB,MAAMnG,KAAKwJ,eAC1DxL,QAAQF,IAAI,EAAKqI,MAAMnG,KAAKwJ,eAHrB,SAIHvE,EAAU,EAAKkB,MAAMnG,MAJlB,OAKTzB,YAAM,6BACR,EAAK2C,MAAM6I,QAAQpG,KAAK,WANb,2C,iMAhCoByB,I,gBAAjBgB,E,EAANpG,KACRwB,KAAKmF,SAAS,CAAEP,W,4QAME,SADVpB,EAAUxD,KAAKN,MAAM8I,MAAMC,OAAO9B,I,iEAGVpD,EAASC,G,gBAAzBjC,E,EAAN/C,KACRwB,KAAKmF,SAAS,CAAE3G,KAAMwB,KAAK0I,eAAenH,K,kDAEtC,KAAG5E,UAAmC,MAAvB,KAAGA,SAASE,QAC7BmD,KAAKN,MAAM6I,QAAQrH,QAAQ,c,oRAKzBlB,KAAK2I,iB,uBACL3I,KAAK4I,gB,2IAGErH,GACb,MAAO,CACLV,IAAKU,EAAMV,IACXY,MAAOF,EAAME,MACbsG,QAASxG,EAAMmE,MAAM7E,IACrBmH,cAAezG,EAAMyG,cACrBC,gBAAiB1G,EAAM0G,mB,+BAczB,OACI,yBAAKlI,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,iBACvB,0CACA,0BAAM8I,SAAU7I,KAAKwH,cAClBxH,KAAK8I,YAAY,QAAS,SAC1B9I,KAAK+I,aAAa,UAAW,QAAS/I,KAAK2E,MAAMC,QACjD5E,KAAK8I,YAAY,gBAAiB,kBAAmB,UACrD9I,KAAK8I,YAAY,kBAAmB,QACpC9I,KAAKgJ,aAAa,gB,GAtFLjC,ICDTkC,GAJG,WAChB,OAAO,0CCGMC,GAJC,WACd,OAAO,wCCGMC,GAJE,WACf,OAAO,0CCsDMC,GAtDA,SAAC,GAAc,IAAZnH,EAAW,EAAXA,KAChB,OACE,yBAAKlC,UAAU,iDACb,kBAAC,IAAD,CAAMA,UAAU,eAAeyB,GAAG,KAAlC,iBAGA,4BACEzB,UAAU,iBACVsE,KAAK,SACLgF,cAAY,WACZC,cAAY,sBACZC,gBAAc,qBACdC,gBAAc,QACdC,aAAW,qBAEX,0BAAM1J,UAAU,yBAElB,yBAAKA,UAAU,2BAA2B4G,GAAG,sBAC3C,yBAAK5G,UAAU,cACb,kBAAC,IAAD,CAASA,UAAU,oBAAoByB,GAAG,WAA1C,UAGA,kBAAC,IAAD,CAASzB,UAAU,oBAAoByB,GAAG,cAA1C,aAGA,kBAAC,IAAD,CAASzB,UAAU,oBAAoByB,GAAG,YAA1C,YAGES,GACA,kBAAC,IAAMyH,SAAP,KACE,kBAAC,IAAD,CAAS3J,UAAU,oBAAoByB,GAAG,UAA1C,SAGA,kBAAC,IAAD,CAASzB,UAAU,oBAAoByB,GAAG,aAA1C,aAKHS,GACW,kBAAC,IAAMyH,SAAP,KACI,kBAAC,IAAD,CAAS3J,UAAU,8BAA8ByB,GAAG,WAAWpB,QAAS,SAACoE,GAAD,OAAOA,EAAEiD,mBAC3F,2BAAIxF,EAAKqC,OAEX,kBAAC,IAAD,CAASvE,UAAU,oBAAoByB,GAAG,WAA1C,eCYCmI,G,4MAnDbhF,MAAQ,CACNnG,KAAM,CAAEJ,SAAU,GAAIC,SAAU,IAChC2I,OAAQ,I,EAGVG,OAAS,CACP/I,SAAU8I,IAAIiB,SACXC,WACA/H,MAAM,YACThC,SAAU6I,IAAIiB,SACXC,WACA/H,MAAM,a,EAGXqH,S,sBAAW,gCAAApJ,EAAA,sEAECE,EAAS,EAAKmG,MAAdnG,KAFD,SAGD0D,EAAKrD,MAAML,EAAKJ,SAAUI,EAAKH,UAH9B,OAKCsG,EAAU,EAAKjF,MAAMkK,SAArBjF,MACRkF,OAAOD,SAAWjF,EAAQA,EAAMmF,KAAKC,SAAW,IANzC,gDAQD,KAAGpN,UAAmC,MAAvB,KAAGA,SAASE,UAEzBmK,EAFyC,eAE3B,EAAKrC,MAAMqC,SACxB5I,SAAW,KAAGzB,SAAS6B,KAC9B,EAAK2G,SAAS,CAAE6B,YAZX,yD,uDAkBT,OAAI9E,EAAKjD,iBAAyB,kBAAC,IAAD,CAAUuC,GAAG,MAGzC,yBAAKzB,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,iBACzB,wBAAIA,UAAU,QAAd,SACA,0BAAM8I,SAAU7I,KAAKwH,cAClBxH,KAAK8I,YAAY,WAAY,YAC7B9I,KAAK8I,YAAY,WAAY,WAAY,YACzC9I,KAAKgJ,aAAa,iB,GA3CLjC,ICHlB7I,GAAcC,IAAS,iBAEtB,SAAS6L,GAAS/H,GACrB,OAAO1D,EAAKpB,KAAKe,GAAa,CAC9BE,SAAU6D,EAAK7D,SACfC,SAAU4D,EAAK5D,SACXa,UAAW+C,EAAK/C,UAChBC,SAAU8C,EAAK9C,W,ICsDR8K,G,4MAzDbtF,MAAQ,CACNnG,KAAM,CAAEJ,SAAU,GAAIC,SAAU,GAAIa,UAAW,GAAIC,SAAS,IAC5D6H,OAAQ,I,EAGVG,OAAS,CACP/I,SAAU8I,IAAIiB,SACXC,WACA8B,QACA7J,MAAM,YACThC,SAAU6I,IAAIiB,SACXC,WACAC,IAAI,GACJhI,MAAM,YACTnB,UAAWgI,IAAIiB,SACZC,WACI/H,MAAM,cACXlB,SAAU+H,IAAIiB,SACTC,WACA/H,MAAM,c,EAGfqH,S,sBAAW,gCAAApJ,EAAA,+EAEsB6L,GAAqB,EAAKxF,MAAMnG,MAFtD,gBAEQjB,EAFR,EAEGiB,KAER0D,EAAKpD,aAAarB,KAAKiB,UAAUnB,IACnCsM,OAAOD,SAAW,IALX,kDAOH,KAAGjN,UAAmC,MAAvB,KAAGA,SAASE,UACvBmK,EADuC,eACzB,EAAKrC,MAAMqC,SACxB5I,SAAW,KAAGzB,SAAS6B,KAC9B,EAAK2G,SAAS,CAAE6B,YAVX,0D,uDAgBT,OACI,yBAAKjH,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,iBACX,wBAAIA,UAAU,QAAd,YACZ,0BAAM8I,SAAU7I,KAAKwH,cAClBxH,KAAK8I,YAAY,WAAY,YAC7B9I,KAAK8I,YAAY,WAAY,WAAY,YACnC9I,KAAK8I,YAAY,YAAa,cAC9B9I,KAAK8I,YAAY,WAAY,aACnC9I,KAAKgJ,aAAa,oB,GAjDFjC,ICSZqD,G,kLAVXlI,EAAKnD,SAEL8K,OAAOD,SAAW,M,+BAIlB,OAAO,S,GARUtJ,aCqBN+J,GApBQ,SAAC,GAAoD,EAAlD7K,KAAmD,IAAlCc,EAAiC,EAA5CgK,UAAsBC,EAAsB,EAAtBA,OAAW9D,EAAW,6CAC1E,OACE,kBAAC,IAAD,iBACMA,EADN,CAEE8D,OAAQ,SAAA7K,GACN,OAAKwC,EAAKjD,iBASHqB,EAAY,kBAACA,EAAcZ,GAAY6K,EAAO7K,GAPjD,kBAAC,IAAD,CACE8B,GAAI,CACFuI,SAAU,SACVpF,MAAO,CAAEmF,KAAMpK,EAAMkK,kB,YC2CtBY,OAxCf,WAAgB,IAAD,EACeC,mBAAS,CAC/BrM,SAAU,GACVC,SAAU,GACViG,KAAK,KAJE,mBACJK,EADI,KACGQ,EADH,KAYb,OANEuF,qBACI,WACI,IAAMzI,EAAOC,EAAKjD,iBAClBkG,EAAS,CAAElD,WACZ,IAGL,kBAAC,IAAMyH,SAAP,KACI,kBAAC,IAAD,MACA,kBAAC,GAAD,CAAQzH,KAAM0C,EAAM1C,OACpB,6BACA,0BAAMlC,UAAU,aAEZ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOP,KAAK,YAAY8K,UAAWL,KACnC,kBAAC,IAAD,CAAOzK,KAAK,SAAS8K,UAAWX,KAChC,kBAAC,IAAD,CAAOnK,KAAK,UAAU8K,UAAWF,KACjC,kBAAC,GAAD,CAAgB5K,KAAK,cAAc8K,UAAWxC,KAC9C,kBAAC,IAAD,CACItI,KAAK,UACL+K,OAAQ,SAAA7K,GAAK,OAAI,kBAAC,EAAD,iBAAYA,EAAZ,CAAmBuC,KAAM0C,EAAM1C,WAEpD,kBAAC,IAAD,CAAOzC,KAAK,aAAa8K,UAAWrB,KACpC,kBAAC,IAAD,CAAOzJ,KAAK,WAAW8K,UAAWpB,KAClC,kBAAC,IAAD,CAAO1J,KAAK,aAAa8K,UAAWnB,KACpC,kBAAC,IAAD,CAAUW,KAAK,IAAIa,OAAK,EAACnJ,GAAG,YAC5B,kBAAC,IAAD,CAAUA,GAAG,mBCrCXoJ,QACW,cAA7Bf,OAAOD,SAASiB,UAEe,UAA7BhB,OAAOD,SAASiB,UAEhBhB,OAAOD,SAASiB,SAASrC,MACvB,2D,YCTNsC,IAASP,OACL,kBAAC,IAAD,KACI,kBAAC,GAAD,OAEJQ,SAASC,eAAe,SDsHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAhP,GACLC,QAAQD,MAAMA,EAAMsF,c","file":"static/js/main.87809a41.chunk.js","sourcesContent":["function init() {}\r\n\r\nfunction log(error) {\r\n  console.error(error);\r\n}\r\n\r\nexport default {\r\n  init,\r\n  log\r\n};","import axios from \"axios\";\r\nimport logger from \"./logService\";\r\nimport { toast } from \"react-toastify\";\r\n\r\naxios.interceptors.response.use(null, error => {\r\n  const expectedError =\r\n    error.response &&\r\n    error.response.status >= 400 &&\r\n    error.response.status < 500;\r\n\r\n  if (!expectedError) {\r\n    logger.log(error);\r\n    toast.error(\"An unexpected error occurrred.\");\r\n  }\r\n\r\n  return Promise.reject(error);\r\n});\r\n\r\nfunction setJwt(jwt) {\r\n    const usr = JSON.parse(localStorage.getItem('token'));\r\n    let token = null;\r\n    if (!jwt) {\r\n        token = usr ? usr.jwtToken : null;\r\n    }\r\n    else {\r\n        token = jwt;\r\n    }\r\n    axios.defaults.headers.authorization = 'bearer ' + token;\r\n}\r\n\r\nexport default {\r\n  get: axios.get,\r\n  post: axios.post,\r\n  put: axios.put,\r\n  delete: axios.delete,\r\n  setJwt\r\n};\r\n","import http from \"./httpService\";\r\nimport { apiUrl } from \"../config.json\";\r\n\r\nconst apiEndpoint = apiUrl + \"/Users/authenticate\";\r\nconst tokenKey = \"token\";\r\n\r\nhttp.setJwt(getJwt());\r\n\r\nexport async function login(username, password) {\r\n  const { data: jwt } = await http.post(apiEndpoint, { username, password });\r\n  debugger;\r\n  localStorage.setItem(tokenKey, JSON.stringify(jwt));\r\n}\r\n\r\nexport function loginWithJwt(jwt) {\r\n  localStorage.setItem(tokenKey, jwt);\r\n}\r\n\r\nexport function logout() {\r\n  localStorage.removeItem(tokenKey);\r\n}\r\n\r\nexport function getCurrentUser() {\r\n  try {\r\n    const jwt = localStorage.getItem(tokenKey);\r\n    const usr = JSON.parse(jwt)\r\n    return { 'name': usr.firstName + ' ' + usr.lastName, 'isAdmin': usr.isAdmin };\r\n  } catch (ex) {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport function getJwt() {\r\n  let tkn = localStorage.getItem(tokenKey);\r\n  console.log(\"Token from LS\", tkn);\r\n  if (tkn) {\r\n    const usr = JSON.parse(tkn)\r\n    return usr ? usr.jwtToken : null;\r\n  }\r\n}\r\n\r\nexport default {\r\n  login,\r\n  loginWithJwt,\r\n  logout,\r\n  getCurrentUser,\r\n  getJwt\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\n// columns: array\r\n// sortColumn: object\r\n// onSort: function\r\n\r\nclass TableHeader extends Component {\r\n  raiseSort = path => {\r\n    const sortColumn = { ...this.props.sortColumn };\r\n    if (sortColumn.path === path)\r\n      sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\r\n    else {\r\n      sortColumn.path = path;\r\n      sortColumn.order = \"asc\";\r\n    }\r\n    this.props.onSort(sortColumn);\r\n  };\r\n\r\n  renderSortIcon = column => {\r\n    const { sortColumn } = this.props;\r\n\r\n    if (column.path !== sortColumn.path) return null;\r\n    if (sortColumn.order === \"asc\") return <i className=\"fa fa-sort-asc\" />;\r\n    return <i className=\"fa fa-sort-desc\" />;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <thead>\r\n        <tr>\r\n          {this.props.columns.map(column => (\r\n            <th\r\n                  className=\"clickable cursor\"\r\n              key={column.path || column.key}\r\n              onClick={() => this.raiseSort(column.path)}\r\n            >\r\n              {column.label} {this.renderSortIcon(column)}\r\n            </th>\r\n          ))}\r\n        </tr>\r\n      </thead>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableHeader;\r\n","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nclass TableBody extends Component {\r\n  renderCell = (item, column) => {\r\n    if (column.content) return column.content(item);\r\n\r\n    return _.get(item, column.path);\r\n  };\r\n\r\n  createKey = (item, column) => {\r\n    return item._id + (column.path || column.key);\r\n  };\r\n\r\n  render() {\r\n    const { data, columns } = this.props;\r\n\r\n    return (\r\n      <tbody>\r\n        {data.map(item => (\r\n          <tr key={item._id}>\r\n            {columns.map(column => (\r\n              <td key={this.createKey(item, column)}>\r\n                {this.renderCell(item, column)}\r\n              </td>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableBody;\r\n","import React from \"react\";\r\nimport TableHeader from \"./tableHeader\";\r\nimport TableBody from \"./tableBody\";\r\n\r\nconst Table = ({ columns, sortColumn, onSort, data }) => {\r\n  return (\r\n    <table className=\"table\">\r\n      <TableHeader columns={columns} sortColumn={sortColumn} onSort={onSort} />\r\n      <TableBody columns={columns} data={data} />\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React from \"react\";\r\n\r\nconst Like = props => {\r\n    let classes = \"fa fa-heart like\";\r\n    if (!props.liked) classes = classes.replace(\" like\",\"-o\");\r\n  return (\r\n    <i\r\n      onClick={props.onClick}\r\n      style={{ cursor: \"pointer\" }}\r\n      className={classes}\r\n      aria-hidden=\"true\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default Like;\r\n","import React, { Component } from \"react\";\r\nimport auth from \"../services/authService\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Table from \"./common/table\";\r\nimport Like from \"./common/like\";\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\n\r\nclass MoviesTable extends Component {\r\n  columns = [\r\n    {\r\n      path: \"title\",\r\n      label: \"Title\",\r\n      content: movie => <Link to={`/movies/${movie._id}`}>{movie.title}</Link>\r\n    },\r\n      { path: \"genre.name\", label: \"Genre\" },\r\n    { path: \"numberInStock\", label: \"Stock\" },\r\n    { path: \"dailyRentalRate\", label: \"Rate\" },\r\n    {\r\n      key: \"like\",\r\n      content: movie => (\r\n        <Like liked={movie.liked} onClick={() => this.props.onLike(movie)} />\r\n      )\r\n    }\r\n  ];\r\n\r\n    asknproceed = (movie) => {\r\n        //alert('Now raised');\r\n        confirmAlert({\r\n            title: 'Please Confirm',\r\n            message: 'Are you sure to do delete the movie - ' + movie.title,\r\n            buttons: [\r\n                {\r\n                    label: 'Yes',\r\n                    onClick: () => this.props.onDelete(movie)\r\n                },\r\n                {\r\n                    label: 'No',\r\n                    onClick: () => { }\r\n                }\r\n            ]\r\n        });\r\n    };\r\n\r\n  deleteColumn = {\r\n    key: \"delete\",\r\n    content: movie => (\r\n        <button\r\n            onClick={() => this.asknproceed(movie)}\r\n        className=\"btn btn-danger btn-sm\"\r\n      >\r\n        Delete\r\n      </button>\r\n    )\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    const user = auth.getCurrentUser();\r\n    if (user && user.isAdmin) this.columns.push(this.deleteColumn);\r\n  }\r\n\r\n  render() {\r\n    const { movies, onSort, sortColumn } = this.props;\r\n\r\n    return (\r\n      <Table\r\n        columns={this.columns}\r\n        data={movies}\r\n        sortColumn={sortColumn}\r\n        onSort={onSort}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default MoviesTable;\r\n","import React from \"react\";\r\n\r\nconst ListGroup = ({\r\n  items,\r\n  textProperty,\r\n  valueProperty,\r\n  selectedItem,\r\n  onItemSelect\r\n}) => {\r\n    return (\r\n        \r\n    <ul className=\"list-group\">\r\n                {items.map(item => (\r\n                    \r\n                    <li\r\n                        onClick={() => onItemSelect(item)}\r\n                        key={item[valueProperty]}\r\n                        className={\r\n                            item[valueProperty] === selectedItem[valueProperty] ? \"list-group-item cursor active\" : \"list-group-item cursor\"\r\n          }\r\n                    >\r\n                        {item[textProperty]}\r\n        </li>\r\n      ))}\r\n            </ul>\r\n            \r\n  );\r\n};\r\n\r\nListGroup.defaultProps = {\r\n  textProperty: \"name\",\r\n  valueProperty: \"_id\"\r\n};\r\n\r\nexport default ListGroup;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport _ from \"lodash\";\r\n\r\nconst Pagination = ({ itemsCount, pageSize, currentPage, onPageChange }) => {\r\n  const pagesCount = Math.ceil(itemsCount / pageSize);\r\n  if (pagesCount === 1) return null;\r\n  const pages = _.range(1, pagesCount + 1);\r\n\r\n  return (\r\n    <nav>\r\n      <ul className=\"pagination\">\r\n        {pages.map(page => (\r\n          <li\r\n            key={page}\r\n                className={page === currentPage ? \"page-item active\" : \"page-item cursor\"}\r\n          >\r\n            <a className=\"page-link\" onClick={() => onPageChange(page)}>\r\n              {page}\r\n            </a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nPagination.propTypes = {\r\n  itemsCount: PropTypes.number.isRequired,\r\n  pageSize: PropTypes.number.isRequired,\r\n  currentPage: PropTypes.number.isRequired,\r\n  onPageChange: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Pagination;\r\n","import http from \"./httpService\";\r\nimport { apiUrl } from \"../config.json\";\r\n\r\nconst apiEndpoint = apiUrl + \"/Movies/\";\r\nhttp.setJwt('');\r\n\r\nfunction movieUrl(id) {\r\n  return `${apiEndpoint}/${id}`;\r\n}\r\n\r\nexport function getMovies() {\r\n  return http.get(apiEndpoint+'GetAll');\r\n}\r\n\r\nexport function getMovie(movieId) {\r\n    return http.get(apiEndpoint + 'GetSingle/'+movieId);\r\n}\r\n\r\nexport function saveMovie(movie) {\r\n    if (movie._id) {\r\n        debugger;\r\n    const body = { ...movie };\r\n    \r\n      return http.put(apiEndpoint + 'UpdateMovie', body);\r\n  }\r\n\r\n    return http.post(apiEndpoint + 'AddMovie', movie);\r\n}\r\n\r\nexport function deleteMovie(movieId) {\r\n    return http.delete(apiEndpoint + 'DeleteMovie/' + movieId);\r\n}\r\n","import http from \"./httpService\";\r\nimport { apiUrl } from \"../config.json\";\r\n\r\nexport function getGenres() {\r\n    return http.get(apiUrl + \"/MovieGenre/GetAll\");\r\n}\r\n","import _ from \"lodash\";\r\n\r\nexport function paginate(items, pageNumber, pageSize) {\r\n  const startIndex = (pageNumber - 1) * pageSize;\r\n  return _(items)\r\n    .slice(startIndex)\r\n    .take(pageSize)\r\n    .value();\r\n}\r\n","import React from \"react\";\r\n\r\nconst SearchBox = ({ value, onChange }) => {\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      name=\"query\"\r\n      className=\"form-control my-3\"\r\n      placeholder=\"Search...\"\r\n      value={value}\r\n      onChange={e => onChange(e.currentTarget.value)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport MoviesTable from \"./moviesTable\";\r\nimport ListGroup from \"./common/listGroup\";\r\nimport Pagination from \"./common/pagination\";\r\nimport { getMovies, deleteMovie } from \"../services/movieService\";\r\nimport { getGenres } from \"../services/genreService\";\r\nimport { paginate } from \"../utils/paginate\";\r\nimport _ from \"lodash\";\r\nimport SearchBox from \"./searchBox\";\r\n\r\nclass Movies extends Component {\r\n  state = {\r\n    movies: [],\r\n    genres: [],\r\n    currentPage: 1,\r\n    pageSize: 4,\r\n    searchQuery: \"\",\r\n    selectedGenre: \"\",\r\n    sortColumn: { path: \"title\", order: \"asc\" }\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { data } = await getGenres();\r\n    const genres = [{ _id: \"\", name: \"All Genres\" }, ...data];\r\n      const selectedGenre = { _id: \"\", name: \"All Genres\" };\r\n      const { data: movies } = await getMovies();\r\n      debugger;\r\n      this.setState({ movies, genres, selectedGenre });\r\n      //this.handleGenreSelect(selectedGenre);\r\n  }\r\n\r\n  handleDelete = async movie => {\r\n    const originalMovies = this.state.movies;\r\n    const movies = originalMovies.filter(m => m._id !== movie._id);\r\n    this.setState({ movies });\r\n\r\n    try {\r\n        await deleteMovie(movie._id);\r\n        toast.success(\"The movie \" + movie.title + \" is deleted.\");\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 404)\r\n          toast.error(\"This movie has already been deleted.\");\r\n      else\r\n          toast.error(\"The movie could not be deleted.\");\r\n\r\n      this.setState({ movies: originalMovies });\r\n    }\r\n  };\r\n\r\n  handleLike = movie => {\r\n    const movies = [...this.state.movies];\r\n    const index = movies.indexOf(movie);\r\n    movies[index] = { ...movies[index] };\r\n    movies[index].liked = !movies[index].liked;\r\n    this.setState({ movies });\r\n  };\r\n\r\n  handlePageChange = page => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  handleGenreSelect = genre => {\r\n    this.setState({ selectedGenre: genre, searchQuery: \"\", currentPage: 1 });\r\n  };\r\n\r\n  handleSearch = query => {\r\n    this.setState({ searchQuery: query, selectedGenre: null, currentPage: 1 });\r\n  };\r\n\r\n  handleSort = sortColumn => {\r\n    this.setState({ sortColumn });\r\n  };\r\n\r\n  getPagedData = () => {\r\n    const {\r\n      pageSize,\r\n      currentPage,\r\n      sortColumn,\r\n      selectedGenre,\r\n      searchQuery,\r\n      movies: allMovies\r\n    } = this.state;\r\n\r\n    let filtered = allMovies;\r\n    if (searchQuery)\r\n      filtered = allMovies.filter(m =>\r\n        m.title.toLowerCase().startsWith(searchQuery.toLowerCase())\r\n      );\r\n    else if (selectedGenre && selectedGenre._id)\r\n      filtered = allMovies.filter(m => m.genre._id === selectedGenre._id);\r\n\r\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\r\n\r\n    const movies = paginate(sorted, currentPage, pageSize);\r\n\r\n    return { totalCount: filtered.length, data: movies };\r\n  };\r\n\r\n  render() {\r\n    const { length: count } = this.state.movies;\r\n    const { pageSize, currentPage, sortColumn, searchQuery } = this.state;\r\n    const { user } = this.props;\r\n\r\n    if (count === 0) return <p>There are no movies in the database.</p>;\r\n\r\n    const { totalCount, data: movies } = this.getPagedData();\r\n\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-3\">\r\n                <ListGroup\r\n                    items={this.state.genres}\r\n            selectedItem={this.state.selectedGenre}\r\n            onItemSelect={this.handleGenreSelect}\r\n          />\r\n        </div>\r\n        <div className=\"col\">\r\n          {user && (\r\n            <Link\r\n              to=\"/movies/new\"\r\n              className=\"btn btn-primary\"\r\n              style={{ marginBottom: 20 }}\r\n            >\r\n              New Movie\r\n            </Link>\r\n          )}\r\n          <p>Showing {totalCount} movies in the database.</p>\r\n          <SearchBox value={searchQuery} onChange={this.handleSearch} />\r\n          <MoviesTable\r\n            movies={movies}\r\n            sortColumn={sortColumn}\r\n            onLike={this.handleLike}\r\n                    onDelete={ this.handleDelete }\r\n            onSort={this.handleSort}\r\n          />\r\n          <Pagination\r\n            itemsCount={totalCount}\r\n            pageSize={pageSize}\r\n            currentPage={currentPage}\r\n            onPageChange={this.handlePageChange}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Movies;\r\n","import React from \"react\";\r\n\r\nconst Input = ({ name, label, error, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input {...rest} name={name} id={name} className=\"form-control\" />\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\n\r\nconst Select = ({ name, label, options, error, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <select name={name} id={name} {...rest} className=\"form-control\">\r\n        <option value=\"\" />\r\n        {options.map(option => (\r\n          <option key={option._id} value={option._id}>\r\n            {option.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import React, { Component } from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Input from \"./input\";\r\nimport Select from \"./select\";\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    data: {},\r\n    errors: {}\r\n  };\r\n\r\n  validate = () => {\r\n    const options = { abortEarly: false };\r\n    const { error } = Joi.validate(this.state.data, this.schema, options);\r\n    if (!error) return null;\r\n\r\n    const errors = {};\r\n    for (let item of error.details) errors[item.path[0]] = item.message;\r\n    return errors;\r\n  };\r\n\r\n  validateProperty = ({ name, value }) => {\r\n    const obj = { [name]: value };\r\n    const schema = { [name]: this.schema[name] };\r\n    const { error } = Joi.validate(obj, schema);\r\n    return error ? error.details[0].message : null;\r\n  };\r\n\r\n  handleSubmit = e => {\r\n      e.preventDefault();\r\n      debugger;\r\n    const errors = this.validate();\r\n    this.setState({ errors: errors || {} });\r\n    if (errors) return;\r\n\r\n    this.doSubmit();\r\n  };\r\n\r\n  handleChange = ({ currentTarget: input }) => {\r\n    const errors = { ...this.state.errors };\r\n    const errorMessage = this.validateProperty(input);\r\n    if (errorMessage) errors[input.name] = errorMessage;\r\n    else delete errors[input.name];\r\n\r\n    const data = { ...this.state.data };\r\n    data[input.name] = input.value;\r\n\r\n    this.setState({ data, errors });\r\n  };\r\n\r\n  renderButton(label) {\r\n    return (\r\n      <button className=\"btn btn-primary\">\r\n        {label}\r\n      </button>\r\n    );\r\n  }\r\n\r\n  renderSelect(name, label, options) {\r\n    const { data, errors } = this.state;\r\n\r\n    return (\r\n      <Select\r\n        name={name}\r\n        value={data[name]}\r\n        label={label}\r\n        options={options}\r\n        onChange={this.handleChange}\r\n        error={errors[name]}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderInput(name, label, type = \"text\") {\r\n    const { data, errors } = this.state;\r\n\r\n    return (\r\n      <Input\r\n        type={type}\r\n        name={name}\r\n        value={data[name]}\r\n        label={label}\r\n        onChange={this.handleChange}\r\n        error={errors[name]}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport { toast } from \"react-toastify\";\r\nimport Form from \"./common/form\";\r\nimport { getMovie, saveMovie } from \"../services/movieService\";\r\nimport { getGenres } from \"../services/genreService\";\r\n\r\nclass MovieForm extends Form {\r\n  state = {\r\n      data: {\r\n      _id:0,\r\n      title: \"\",\r\n      genreId: \"\",\r\n      numberInStock: \"\",\r\n      dailyRentalRate: \"\"\r\n    },\r\n    genres: [],\r\n    errors: {}\r\n  };\r\n\r\n  schema = {\r\n    _id: Joi.number(),\r\n    title: Joi.string()\r\n      .required()\r\n      .label(\"Title\"),\r\n    genreId: Joi.number()\r\n      .required()\r\n      .label(\"Genre\"),\r\n    numberInStock: Joi.number()\r\n      .required()\r\n      .min(0)\r\n      .max(100)\r\n      .label(\"Number in Stock\"),\r\n    dailyRentalRate: Joi.number()\r\n      .required()\r\n      .min(0)\r\n      .max(10)\r\n      .label(\"Daily Rental Rate\")\r\n  };\r\n\r\n  async populateGenres() {\r\n    const { data: genres } = await getGenres();\r\n    this.setState({ genres });\r\n  }\r\n\r\n  async populateMovie() {\r\n    try {\r\n      const movieId = this.props.match.params.id;\r\n      if (movieId === \"new\") return;\r\n\r\n      const { data: movie } = await getMovie(movieId);\r\n      this.setState({ data: this.mapToViewModel(movie) });\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 404)\r\n        this.props.history.replace(\"/not-found\");\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.populateGenres();\r\n    await this.populateMovie();\r\n  }\r\n\r\n  mapToViewModel(movie) {\r\n    return {\r\n      _id: movie._id,\r\n      title: movie.title,\r\n      genreId: movie.genre._id,\r\n      numberInStock: movie.numberInStock,\r\n      dailyRentalRate: movie.dailyRentalRate\r\n    };\r\n  }\r\n\r\n    doSubmit = async () => {\r\n        debugger;\r\n        this.state.data.numberInStock = Math.ceil(this.state.data.numberInStock);\r\n        console.log(this.state.data.numberInStock);\r\n      await saveMovie(this.state.data);\r\n      toast(\"Movie Saved Successfully!\");\r\n    this.props.history.push(\"/movies\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-6 mx-auto\">\r\n        <h1>Movie Form</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"title\", \"Title\")}\r\n          {this.renderSelect(\"genreId\", \"Genre\", this.state.genres)}\r\n          {this.renderInput(\"numberInStock\", \"Number in Stock\", \"number\")}\r\n          {this.renderInput(\"dailyRentalRate\", \"Rate\")}\r\n          {this.renderButton(\"Save\")}\r\n                    </form>\r\n                </div>\r\n            </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieForm;\r\n","import React from \"react\";\r\n\r\nconst Customers = () => {\r\n  return <h1>Customers</h1>;\r\n};\r\n\r\nexport default Customers;\r\n","import React from \"react\";\r\n\r\nconst Rentals = () => {\r\n  return <h1>Rentals</h1>;\r\n};\r\n\r\nexport default Rentals;\r\n","import React from \"react\";\r\n\r\nconst NotFound = () => {\r\n  return <h1>Not Found</h1>;\r\n};\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\n\r\nconst NavBar = ({ user }) => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n      <Link className=\"navbar-brand\" to=\"/\">\r\n        Ur Fav Movies\r\n      </Link>\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarNavAltMarkup\"\r\n        aria-controls=\"navbarNavAltMarkup\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\" />\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n        <div className=\"navbar-nav\">\r\n          <NavLink className=\"nav-item nav-link\" to=\"/movies\">\r\n            Movies\r\n          </NavLink>\r\n          <NavLink className=\"nav-item nav-link\" to=\"/customers\">\r\n            Customers\r\n          </NavLink>\r\n          <NavLink className=\"nav-item nav-link\" to=\"/rentals\">\r\n            Rentals\r\n          </NavLink>\r\n          {!user && (\r\n            <React.Fragment>\r\n              <NavLink className=\"nav-item nav-link\" to=\"/login\">\r\n                Login\r\n              </NavLink>\r\n              <NavLink className=\"nav-item nav-link\" to=\"/register\">\r\n                Register\r\n              </NavLink>\r\n            </React.Fragment>\r\n          )}\r\n          {user && (\r\n                      <React.Fragment>\r\n                          <NavLink className=\"nav-item nav-link no-cursor\" to=\"/profile\" onClick={(e) => e.preventDefault()}>\r\n                <b>{user.name}</b>\r\n              </NavLink>\r\n              <NavLink className=\"nav-item nav-link\" to=\"/logout\">\r\n                Logout\r\n              </NavLink>\r\n            </React.Fragment>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\nimport auth from \"../services/authService\";\r\n\r\nclass LoginForm extends Form {\r\n  state = {\r\n    data: { username: \"\", password: \"\" },\r\n    errors: {}\r\n  };\r\n\r\n  schema = {\r\n    username: Joi.string()\r\n      .required()\r\n      .label(\"Username\"),\r\n    password: Joi.string()\r\n      .required()\r\n      .label(\"Password\")\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    try {\r\n      const { data } = this.state;\r\n      await auth.login(data.username, data.password);\r\n\r\n      const { state } = this.props.location;\r\n      window.location = state ? state.from.pathname : \"/\";\r\n    } catch (ex) {\r\n        if (ex.response && ex.response.status === 400) {\r\n            debugger;\r\n        const errors = { ...this.state.errors };\r\n        errors.username = ex.response.data;\r\n        this.setState({ errors });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (auth.getCurrentUser()) return <Redirect to=\"/\" />;\r\n\r\n      return (\r\n          <div className=\"container\">\r\n              <div className=\"row\">\r\n                  <div className=\"col-6 mx-auto\">\r\n        <h1 className=\"mt-5\">Login</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"username\", \"Username\")}\r\n          {this.renderInput(\"password\", \"Password\", \"password\")}\r\n          {this.renderButton(\"Login\")}\r\n                      </form>\r\n                  </div>\r\n                  </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;\r\n","import http from \"./httpService\";\r\nimport { apiUrl } from \"../config.json\";\r\n\r\nconst apiEndpoint = apiUrl + \"/users/adduser\";\r\n\r\nexport function register(user) {\r\n    return http.post(apiEndpoint, {\r\n    username: user.username,\r\n    password: user.password,\r\n        firstName: user.firstName,\r\n        lastName: user.lastName\r\n  });\r\n}\r\n","import React from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\nimport * as userService from \"../services/userService\";\r\nimport auth from \"../services/authService\";\r\n\r\nclass RegisterForm extends Form {\r\n  state = {\r\n    data: { username: \"\", password: \"\", firstName: \"\", lastName:\"\" },\r\n    errors: {}\r\n  };\r\n\r\n  schema = {\r\n    username: Joi.string()\r\n      .required()\r\n      .email()\r\n      .label(\"Email Id\"),\r\n    password: Joi.string()\r\n      .required()\r\n      .min(5)\r\n      .label(\"Password\"),\r\n    firstName: Joi.string()\r\n      .required()\r\n          .label(\"First Name\"),\r\n      lastName: Joi.string()\r\n          .required()\r\n          .label(\"Last Name\")\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    try {\r\n        const { data:jwt } = await userService.register(this.state.data);\r\n        debugger;\r\n        auth.loginWithJwt(JSON.stringify(jwt));\r\n      window.location = \"/\";\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        const errors = { ...this.state.errors };\r\n        errors.username = ex.response.data;\r\n        this.setState({ errors });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-6 mx-auto\">\r\n                    <h1 className=\"mt-5\">Register</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"username\", \"Username\")}\r\n          {this.renderInput(\"password\", \"Password\", \"password\")}\r\n                {this.renderInput(\"firstName\", \"First Name\")}\r\n                {this.renderInput(\"lastName\", \"Last Name\")}\r\n          {this.renderButton(\"Register\")}\r\n        </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegisterForm;\r\n","import { Component } from \"react\";\r\nimport auth from \"../services/authService\";\r\n\r\nclass Logout extends Component {\r\n  componentDidMount() {\r\n    auth.logout();\r\n\r\n    window.location = \"/\";\r\n  }\r\n\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default Logout;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport auth from \"../../services/authService\";\r\n\r\nconst ProtectedRoute = ({ path, component: Component, render, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        if (!auth.getCurrentUser())\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/login\",\r\n                state: { from: props.location }\r\n              }}\r\n            />\r\n          );\r\n        return Component ? <Component {...props} /> : render(props);\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import React, { Component, useState, useEffect, Fragment } from \"react\";\nimport { BrowserRouter, Route, Redirect, Switch } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport Movies from \"./components/movies\";\nimport MovieForm from \"./components/movieForm\";\nimport Customers from \"./components/customers\";\nimport Rentals from \"./components/rentals\";\nimport NotFound from \"./components/notFound\";\nimport NavBar from \"./components/navBar\";\nimport LoginForm from \"./components/loginForm\";\nimport RegisterForm from \"./components/registerForm\";\nimport Logout from \"./components/logout\";\nimport ProtectedRoute from \"./components/common/protectedRoute\";\nimport auth from \"./services/authService\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport './App.css';\n\nfunction App() {\n    const [state, setState] = useState({\n        username: '',\n        password: '',\n        name:''\n    });\n    useEffect(\n        () => {\n            const user = auth.getCurrentUser();\n            setState({ user });\n        }, []\n    );\n  return (\n      <React.Fragment>\n          <ToastContainer />\n          <NavBar user={state.user} />\n          <br/>\n          <main className=\"container\">\n             \n              <Switch>\n                  <Route path=\"/register\" component={RegisterForm} />\n                  <Route path=\"/login\" component={LoginForm} />\n                  <Route path=\"/logout\" component={Logout} />\n                  <ProtectedRoute path=\"/movies/:id\" component={MovieForm} />\n                  <Route\n                      path=\"/movies\"\n                      render={props => <Movies {...props} user={state.user} />}\n                  />\n                  <Route path=\"/customers\" component={Customers} />\n                  <Route path=\"/rentals\" component={Rentals} />\n                  <Route path=\"/not-found\" component={NotFound} />\n                  <Redirect from=\"/\" exact to=\"/movies\" />\n                  <Redirect to=\"/not-found\" />\n               </Switch>\n            \n          </main>\n      </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}